import java.sql.Connection;
import java.sql.Date;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

public class JDBCExample2 {

	public static void main(String[] args) {
		String driver = "oracle.jdbc.driver.OracleDriver";
		String url = "jdbc:oracle:thin:@164.125.69.75:1521:xe";
		String userid = "busan04";
		String passwd = "busan04";

		// 드라이버 로딩
		try {
			Class.forName(driver);
		} catch (ClassNotFoundException e) {
			e.printStackTrace();
		}

		// 세션 연결하기
		Connection con = null;
		PreparedStatement pstmt=null;
		Statement stmt = null;
		ResultSet rs = null;

		try {
			con = DriverManager.getConnection(url, userid, passwd);
			stmt = con.createStatement();
			String query = "SELECT empno, ename " 
							+ " FROM emp "
							+" WHERE deptno= 10 ";
			rs = stmt.executeQuery(query);

			while (rs.next()) {
				int empno = rs.getInt("empno");
				
				String ename = rs.getString("ename");
				

				System.out.println(empno + "\t " + ename );
			}
			String pQuery = "SELECT empno, ename"
					+" FROM emp "
					+" WHERE deptno = ?";
			pstmt=con.prepareStatement(pQuery);
			pstmt.setInt(1, 10);//여기서의 값만 바꾸어 주면 원하는것 출력할수 있다.
			//prepared 의 장점 그만큼 코딩이 짧아짐
			
			rs.close();
			rs=pstmt.executeQuery();
			
			System.out.println(" ");
			while (rs.next()) {
				int empno = rs.getInt("empno");
				
				String ename = rs.getString("ename");
				

				System.out.println(empno + "\t " + ename );
			}
		rs.close();			
			
		} catch (SQLException e) {
			e.printStackTrace();
		} finally {
			try {
				if (rs != null) {
					rs.close();
				}
				if (stmt != null) {
					stmt.close();
				}
				if (con != null) {
					con.close();
				}
			} catch (SQLException e) {
				e.printStackTrace();
			}
		}
	}	
}















